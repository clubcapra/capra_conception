@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4.puml

Container(webUiContainer, "Web UI", "TypeScript and React", "Provide all of the functionalities to the operator via web browser")
Container(simulationContainer, "Simulation", "C++ and ROS", "Simulate the robot in real world situation and test it's functionalities")
Container_Boundary(robotContainer, "Robot System"){
    Component(motorComposant, "Motors", "ROS Nodelet", "Allows to control the motors")
    Component(descriptionComposant, "Description", "ROS Node", "Represent of the robot virtually in 3D")
    Component(missionComposant, "Mission", "ROS Nodelet", "Provide service to start and end mission for each lane")
    Component(estopComposant, "E-Stop", "Robot Nodelet", "Emergency control on the robot")
    Component(motionDetectionComposant, "Motion Detection", "Robot Nodelet", "Provides information about motion detection from the sensors")
    Component(hazmatDetectionComposant, "Hazmat Detection", "Robot Nodelet", "Provides information about hazmat detection from the sensors")
    Component(SLAMComposant, "SLAM", "ROS Nodelet", "Provides a map and a localisation of the robot")
    Component(POIComposant, "POI", "ROS Nodelet", "Provides a information about the point of interests detected")
    Component(headlightsComposant, "Headlights", "ROS Nodelet", "Provides control of the headlights of the robot")
    Component(audioComposant, "Audio", "ROS Nodelet", "Provides vocal communication through the robot")
    Component(CO2Composant, "CO2", "ROS Nodelet", "Provides information about the CO2 from the sensors")
    Component(armComposant, "Arm", "ROS Nodelet", "Allows to control the arm")
    Component(robotComposant, "Robot", "ROS Nodelet", "Allows a simple interface to control and manage the system")
    Component(monitoringComposant, "Monitoring", "ROS Nodelet", "Provides information on the robot and is current state")
}
Container(sensorContainer, "Sensors", "Robot Hardware", "Provides the sensors states and raw data")

Rel_D(webUiContainer, robotContainer, "Uses", "WebSocket / JSON")

Rel_D(descriptionComposant,motorComposant,"read")
Rel_D(descriptionComposant,armComposant,"read")

Rel_D(missionComposant,robotComposant,"read/write")

Rel_D(monitoringComposant,robotComposant,"read")

Rel_D(estopComposant,robotComposant,"read/write")

Rel_Neighbor(POIComposant,hazmatDetectionComposant,"read")
Rel_Neighbor(POIComposant,motionDetectionComposant,"read")

Rel_D(simulationContainer, sensorContainer, "read/write")
Rel_D(simulationContainer, robotContainer, "read")

Rel_D(robotContainer,sensorContainer,"Uses")
@enduml