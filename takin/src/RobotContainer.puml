@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND

Container(toolsContainer, "Tools", "C++ and ROS", "Provide tools to repair, debug and monitor the robot")
Container_Boundary(robotContainer, "Robot System"){
    Component(motorComposant, "Motors", "ROS Nodelet", "Allows to control the motors")
    Component(armComposant, "Arm", "ROS Nodelet", "Allows to control the arm")
    Component(navigationComposant, "Navigation", "ROS Nodelet", "Provides a path to the next goal from the map")
    Component(decisionAIComposant, "Decision AI", "ROS Nodelet", "Provides the robot decision from the current context")
    Component(sensorsComposant, "Sensors", "ROS Nodelet", "Provides the sensors states and raw data")
    Component(robotAPIComposant, "Robot API", "ROS Nodelet", "Allows a simple interface to control and manage the system")
    Component(monitoringComposant, "Monitoring", "ROS Nodelet", "Provides information on the robot and is current state")
    Component(mappingComposant, "Mapping", "ROS Nodelet", "Provides the map and point of interests ")
    Component(detectionComposant, "Detections", "ROS Nodelet", "Detects and locate the points of interest from the sensors")
    Component(webServerComposant, "Web Server", "ROS Nodelet", "Provides WebSocket interface with the Web UI")
}
Container(simulationContainer, "Simulation", "C++ and ROS", "Simulate the robot in real world situation and test functionality in critical state")
Container(webUiContainer, "Web UI", "JavaScript and Vue", "Provide all of the functionnalities to the operator via web browser")

Rel(webUiContainer, webServerComposant, "Uses", "WebSocket / JSON")

Rel(webServerComposant, robotAPIComposant, "Configure")
Rel(webServerComposant, navigationComposant, "Send input")
Rel(webServerComposant, mappingComposant, "Read map")
Rel(webServerComposant, detectionComposant, "Read data")
Rel(webServerComposant, monitoringComposant, "Read data")

Rel(toolsContainer, robotContainer, "Uses", "SSH")

Rel(simulationContainer, sensorsComposant, "Simulate")

Rel(decisionAIComposant, navigationComposant, "Send target")
Rel(decisionAIComposant, monitoringComposant, "Read state")
Rel(decisionAIComposant, mappingComposant, "Read Map")

Rel(navigationComposant, motorComposant, "Uses")
Rel(navigationComposant, armComposant, "Uses")
Rel(navigationComposant, mappingComposant, "Read Map")

Rel(mappingComposant, sensorsComposant, "Uses")

Rel(detectionComposant, sensorsComposant, "Uses")
Rel(detectionComposant, mappingComposant, "Send POI")

Rel(monitoringComposant, sensorsComposant, "Uses")

@enduml